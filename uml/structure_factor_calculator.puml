@startuml Structure Factor Calculator Module

package "Backend" {
    class StructureFactorCalculator {
        - _initialized: bool
        - lab: Lab
        - energy: float
        + __init__()
        + initialize(params: dict)
        + is_initialized(): bool
        + calculate_structure_factor(hkl: tuple): float
        + calculate_structure_factors(hkl_list: list[tuple]): list[float]
    }
    
    class Lab {
        - lattice_parameters: dict
        - real_space_vectors: tuple
        - reciprocal_space_vectors: tuple
        + __init__()
        + initialize(a, b, c, alpha, beta, gamma, roll, pitch, yaw, theta, phi, chi)
        + get_lattice_parameters(): dict
        + get_real_space_vectors(): tuple
        + get_reciprocal_space_vectors(): tuple
    }
    
    class StructureFactorVisualizer {
        - fig: Figure
        - axes: Axes3D
        - _initialized: bool
        + __init__(width, height, dpi)
        + initialize(params: dict)
        + is_initialized(): bool
        + visualize_structure_factors(hkl_list, sf_values)
        + visualize()
        + update()
    }
}

package "Frontend" {
    class TabInterface {
        # main_window: MainWindow
        # layout: QGridLayout
        + __init__(main_window: MainWindow)
        + init_ui()
        + set_parameters(params: dict)
        + get_module_instance()
        + get_state()
        + set_state(state: dict)
    }
    
    class StructureFactorTab {
        - calculator: StructureFactorCalculator
        - visualizer: StructureFactorVisualizer
        - funtional_objects: list
        - tips: Tips
        - results_table: QTableWidget
        - h_min_input, h_max_input: QDoubleSpinBox
        - k_min_input, k_max_input: QDoubleSpinBox
        - l_min_input, l_max_input: QDoubleSpinBox
        + __init__(main_window: MainWindow)
        + init_ui()
        + set_parameters(params: dict)
        + calculate_structure_factors()
        + update_results_table(hkl_list, sf_values)
        + get_module_instance()
        + get_state()
        + set_state(state: dict)
    }
    
    class MainWindow {
        - config: dict
        - parameters: dict
        - tabs_loaded: bool
        - stacked_widget: QStackedWidget
        - tab_widget: QTabWidget
        - init_window: InitWindow
        + __init__()
        + get_parameters(): dict
        + set_parameters(params: dict)
        + load_tabs()
    }
}

' Define relationships
TabInterface <|-- StructureFactorTab : extends
StructureFactorTab --> StructureFactorCalculator : uses
StructureFactorTab --> StructureFactorVisualizer : uses
StructureFactorCalculator --> Lab : uses
StructureFactorTab ..> MainWindow : references

@enduml 